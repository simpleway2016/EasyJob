//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace EJClient.Web {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DatabaseServiceSoap", Namespace="http://tempuri.org/")]
    public partial class DatabaseService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback testOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserNameByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeModuleParentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentUserProjectListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTablesInModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPkColumnNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveTableFromModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatabaseListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBModuleIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTableInMoudleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeleteConfigInModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTableNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetColumnNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetColumnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBModuleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTableDeleteConfigListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTableIDXIndexListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTableListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetColumnListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBTablePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBModulePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDBModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportDatabaseConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectDllFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInterfaceModuleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInterfaceModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnLockInterfaceModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockInterfaceModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInterfaceModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInterfaceModulePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInterfaceInModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInterfaceInModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInterfaceInModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInterfaceModuleIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInterfaceInModulePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitBugOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyBugListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyBugsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugHistoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback BugFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateFileListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownLoadFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DatabaseService() {
            this.Url = global::EJClient.Properties.Settings.Default.EJClient_Web_DatabaseService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event testCompletedEventHandler testCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event CreateProjectCompletedEventHandler CreateProjectCompleted;
        
        /// <remarks/>
        public event DeleteProjectCompletedEventHandler DeleteProjectCompleted;
        
        /// <remarks/>
        public event UpdateProjectCompletedEventHandler UpdateProjectCompleted;
        
        /// <remarks/>
        public event GetUserNameByIDCompletedEventHandler GetUserNameByIDCompleted;
        
        /// <remarks/>
        public event ChangeModuleParentCompletedEventHandler ChangeModuleParentCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event GetCurrentUserProjectListCompletedEventHandler GetCurrentUserProjectListCompleted;
        
        /// <remarks/>
        public event GetTablesInModuleCompletedEventHandler GetTablesInModuleCompleted;
        
        /// <remarks/>
        public event GetPkColumnNameCompletedEventHandler GetPkColumnNameCompleted;
        
        /// <remarks/>
        public event SaveDataTableCompletedEventHandler SaveDataTableCompleted;
        
        /// <remarks/>
        public event DeleteDatabaseCompletedEventHandler DeleteDatabaseCompleted;
        
        /// <remarks/>
        public event GetActionsCompletedEventHandler GetActionsCompleted;
        
        /// <remarks/>
        public event RemoveTableFromModuleCompletedEventHandler RemoveTableFromModuleCompleted;
        
        /// <remarks/>
        public event GetDataTableCompletedEventHandler GetDataTableCompleted;
        
        /// <remarks/>
        public event ImportDataCompletedEventHandler ImportDataCompleted;
        
        /// <remarks/>
        public event GetDataSetCompletedEventHandler GetDataSetCompleted;
        
        /// <remarks/>
        public event GetDatabaseCompletedEventHandler GetDatabaseCompleted;
        
        /// <remarks/>
        public event GetDatabaseListCompletedEventHandler GetDatabaseListCompleted;
        
        /// <remarks/>
        public event GetDBModuleIDCompletedEventHandler GetDBModuleIDCompleted;
        
        /// <remarks/>
        public event UpdateTableInMoudleCompletedEventHandler UpdateTableInMoudleCompleted;
        
        /// <remarks/>
        public event GetDeleteConfigInModuleCompletedEventHandler GetDeleteConfigInModuleCompleted;
        
        /// <remarks/>
        public event GetTableNamesCompletedEventHandler GetTableNamesCompleted;
        
        /// <remarks/>
        public event GetColumnNamesCompletedEventHandler GetColumnNamesCompleted;
        
        /// <remarks/>
        public event GetColumnsCompletedEventHandler GetColumnsCompleted;
        
        /// <remarks/>
        public event GetDBModuleListCompletedEventHandler GetDBModuleListCompleted;
        
        /// <remarks/>
        public event GetTableDeleteConfigListCompletedEventHandler GetTableDeleteConfigListCompleted;
        
        /// <remarks/>
        public event GetTableIDXIndexListCompletedEventHandler GetTableIDXIndexListCompleted;
        
        /// <remarks/>
        public event GetTableListCompletedEventHandler GetTableListCompleted;
        
        /// <remarks/>
        public event GetObjectFormatCompletedEventHandler GetObjectFormatCompleted;
        
        /// <remarks/>
        public event GetColumnListCompletedEventHandler GetColumnListCompleted;
        
        /// <remarks/>
        public event ModifyTableCompletedEventHandler ModifyTableCompleted;
        
        /// <remarks/>
        public event DeleteModuleCompletedEventHandler DeleteModuleCompleted;
        
        /// <remarks/>
        public event GetDBTablePathCompletedEventHandler GetDBTablePathCompleted;
        
        /// <remarks/>
        public event GetDBModulePathCompletedEventHandler GetDBModulePathCompleted;
        
        /// <remarks/>
        public event UpdateDBModuleCompletedEventHandler UpdateDBModuleCompleted;
        
        /// <remarks/>
        public event DeleteTableCompletedEventHandler DeleteTableCompleted;
        
        /// <remarks/>
        public event CreateTableCompletedEventHandler CreateTableCompleted;
        
        /// <remarks/>
        public event ImportDatabaseConfigCompletedEventHandler ImportDatabaseConfigCompleted;
        
        /// <remarks/>
        public event CreateDatabaseCompletedEventHandler CreateDatabaseCompleted;
        
        /// <remarks/>
        public event GetProjectDllFilesCompletedEventHandler GetProjectDllFilesCompleted;
        
        /// <remarks/>
        public event GetInterfaceModuleListCompletedEventHandler GetInterfaceModuleListCompleted;
        
        /// <remarks/>
        public event DeleteInterfaceModuleCompletedEventHandler DeleteInterfaceModuleCompleted;
        
        /// <remarks/>
        public event UnLockInterfaceModuleCompletedEventHandler UnLockInterfaceModuleCompleted;
        
        /// <remarks/>
        public event LockInterfaceModuleCompletedEventHandler LockInterfaceModuleCompleted;
        
        /// <remarks/>
        public event UpdateInterfaceModuleCompletedEventHandler UpdateInterfaceModuleCompleted;
        
        /// <remarks/>
        public event GetInterfaceModulePathCompletedEventHandler GetInterfaceModulePathCompleted;
        
        /// <remarks/>
        public event UpdateInterfaceInModuleCompletedEventHandler UpdateInterfaceInModuleCompleted;
        
        /// <remarks/>
        public event DeleteInterfaceInModuleCompletedEventHandler DeleteInterfaceInModuleCompleted;
        
        /// <remarks/>
        public event GetInterfaceInModuleCompletedEventHandler GetInterfaceInModuleCompleted;
        
        /// <remarks/>
        public event GetInterfaceModuleIDCompletedEventHandler GetInterfaceModuleIDCompleted;
        
        /// <remarks/>
        public event GetInterfaceInModulePathCompletedEventHandler GetInterfaceInModulePathCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event SubmitBugCompletedEventHandler SubmitBugCompleted;
        
        /// <remarks/>
        public event GetMyBugListCountCompletedEventHandler GetMyBugListCountCompleted;
        
        /// <remarks/>
        public event GetMyBugsCompletedEventHandler GetMyBugsCompleted;
        
        /// <remarks/>
        public event GetBugHistoriesCompletedEventHandler GetBugHistoriesCompleted;
        
        /// <remarks/>
        public event GetBugPictureCompletedEventHandler GetBugPictureCompleted;
        
        /// <remarks/>
        public event BugFinishCompletedEventHandler BugFinishCompleted;
        
        /// <remarks/>
        public event SubmitHistoryCompletedEventHandler SubmitHistoryCompleted;
        
        /// <remarks/>
        public event GetUpdateFileListCompletedEventHandler GetUpdateFileListCompleted;
        
        /// <remarks/>
        public event DownLoadFileCompletedEventHandler DownLoadFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string test() {
            object[] results = this.Invoke("test", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testAsync() {
            this.testAsync(null);
        }
        
        /// <remarks/>
        public void testAsync(object userState) {
            if ((this.testOperationCompleted == null)) {
                this.testOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestOperationCompleted);
            }
            this.InvokeAsync("test", new object[0], this.testOperationCompleted, userState);
        }
        
        private void OntestOperationCompleted(object arg) {
            if ((this.testCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCompleted(this, new testCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] Login(string name, string pwd) {
            object[] results = this.Invoke("Login", new object[] {
                        name,
                        pwd});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string name, string pwd) {
            this.LoginAsync(name, pwd, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string name, string pwd, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        name,
                        pwd}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateProject(string name) {
            object[] results = this.Invoke("CreateProject", new object[] {
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProjectAsync(string name) {
            this.CreateProjectAsync(name, null);
        }
        
        /// <remarks/>
        public void CreateProjectAsync(string name, object userState) {
            if ((this.CreateProjectOperationCompleted == null)) {
                this.CreateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProjectOperationCompleted);
            }
            this.InvokeAsync("CreateProject", new object[] {
                        name}, this.CreateProjectOperationCompleted, userState);
        }
        
        private void OnCreateProjectOperationCompleted(object arg) {
            if ((this.CreateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProjectCompleted(this, new CreateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProject(int id) {
            this.Invoke("DeleteProject", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteProjectAsync(int id) {
            this.DeleteProjectAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteProjectAsync(int id, object userState) {
            if ((this.DeleteProjectOperationCompleted == null)) {
                this.DeleteProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProjectOperationCompleted);
            }
            this.InvokeAsync("DeleteProject", new object[] {
                        id}, this.DeleteProjectOperationCompleted, userState);
        }
        
        private void OnDeleteProjectOperationCompleted(object arg) {
            if ((this.DeleteProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProject(int id, string name) {
            this.Invoke("UpdateProject", new object[] {
                        id,
                        name});
        }
        
        /// <remarks/>
        public void UpdateProjectAsync(int id, string name) {
            this.UpdateProjectAsync(id, name, null);
        }
        
        /// <remarks/>
        public void UpdateProjectAsync(int id, string name, object userState) {
            if ((this.UpdateProjectOperationCompleted == null)) {
                this.UpdateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProjectOperationCompleted);
            }
            this.InvokeAsync("UpdateProject", new object[] {
                        id,
                        name}, this.UpdateProjectOperationCompleted, userState);
        }
        
        private void OnUpdateProjectOperationCompleted(object arg) {
            if ((this.UpdateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserNameByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserNameByID(int id) {
            object[] results = this.Invoke("GetUserNameByID", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserNameByIDAsync(int id) {
            this.GetUserNameByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUserNameByIDAsync(int id, object userState) {
            if ((this.GetUserNameByIDOperationCompleted == null)) {
                this.GetUserNameByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserNameByIDOperationCompleted);
            }
            this.InvokeAsync("GetUserNameByID", new object[] {
                        id}, this.GetUserNameByIDOperationCompleted, userState);
        }
        
        private void OnGetUserNameByIDOperationCompleted(object arg) {
            if ((this.GetUserNameByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserNameByIDCompleted(this, new GetUserNameByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeModuleParent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeModuleParent(int moduleid, int parentid) {
            this.Invoke("ChangeModuleParent", new object[] {
                        moduleid,
                        parentid});
        }
        
        /// <remarks/>
        public void ChangeModuleParentAsync(int moduleid, int parentid) {
            this.ChangeModuleParentAsync(moduleid, parentid, null);
        }
        
        /// <remarks/>
        public void ChangeModuleParentAsync(int moduleid, int parentid, object userState) {
            if ((this.ChangeModuleParentOperationCompleted == null)) {
                this.ChangeModuleParentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeModuleParentOperationCompleted);
            }
            this.InvokeAsync("ChangeModuleParent", new object[] {
                        moduleid,
                        parentid}, this.ChangeModuleParentOperationCompleted, userState);
        }
        
        private void OnChangeModuleParentOperationCompleted(object arg) {
            if ((this.ChangeModuleParentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeModuleParentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangePassword(string oldpwd, string newpwd) {
            this.Invoke("ChangePassword", new object[] {
                        oldpwd,
                        newpwd});
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string oldpwd, string newpwd) {
            this.ChangePasswordAsync(oldpwd, newpwd, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string oldpwd, string newpwd, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        oldpwd,
                        newpwd}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentUserProjectList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentUserProjectList() {
            object[] results = this.Invoke("GetCurrentUserProjectList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentUserProjectListAsync() {
            this.GetCurrentUserProjectListAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentUserProjectListAsync(object userState) {
            if ((this.GetCurrentUserProjectListOperationCompleted == null)) {
                this.GetCurrentUserProjectListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentUserProjectListOperationCompleted);
            }
            this.InvokeAsync("GetCurrentUserProjectList", new object[0], this.GetCurrentUserProjectListOperationCompleted, userState);
        }
        
        private void OnGetCurrentUserProjectListOperationCompleted(object arg) {
            if ((this.GetCurrentUserProjectListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentUserProjectListCompleted(this, new GetCurrentUserProjectListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTablesInModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTablesInModule(int moduleid) {
            object[] results = this.Invoke("GetTablesInModule", new object[] {
                        moduleid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTablesInModuleAsync(int moduleid) {
            this.GetTablesInModuleAsync(moduleid, null);
        }
        
        /// <remarks/>
        public void GetTablesInModuleAsync(int moduleid, object userState) {
            if ((this.GetTablesInModuleOperationCompleted == null)) {
                this.GetTablesInModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTablesInModuleOperationCompleted);
            }
            this.InvokeAsync("GetTablesInModule", new object[] {
                        moduleid}, this.GetTablesInModuleOperationCompleted, userState);
        }
        
        private void OnGetTablesInModuleOperationCompleted(object arg) {
            if ((this.GetTablesInModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTablesInModuleCompleted(this, new GetTablesInModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPkColumnName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPkColumnName(int tableid) {
            object[] results = this.Invoke("GetPkColumnName", new object[] {
                        tableid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPkColumnNameAsync(int tableid) {
            this.GetPkColumnNameAsync(tableid, null);
        }
        
        /// <remarks/>
        public void GetPkColumnNameAsync(int tableid, object userState) {
            if ((this.GetPkColumnNameOperationCompleted == null)) {
                this.GetPkColumnNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPkColumnNameOperationCompleted);
            }
            this.InvokeAsync("GetPkColumnName", new object[] {
                        tableid}, this.GetPkColumnNameOperationCompleted, userState);
        }
        
        private void OnGetPkColumnNameOperationCompleted(object arg) {
            if ((this.GetPkColumnNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPkColumnNameCompleted(this, new GetPkColumnNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveDataTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveDataTable(System.Data.DataTable dt, int tableid, string[] delIds) {
            this.Invoke("SaveDataTable", new object[] {
                        dt,
                        tableid,
                        delIds});
        }
        
        /// <remarks/>
        public void SaveDataTableAsync(System.Data.DataTable dt, int tableid, string[] delIds) {
            this.SaveDataTableAsync(dt, tableid, delIds, null);
        }
        
        /// <remarks/>
        public void SaveDataTableAsync(System.Data.DataTable dt, int tableid, string[] delIds, object userState) {
            if ((this.SaveDataTableOperationCompleted == null)) {
                this.SaveDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDataTableOperationCompleted);
            }
            this.InvokeAsync("SaveDataTable", new object[] {
                        dt,
                        tableid,
                        delIds}, this.SaveDataTableOperationCompleted, userState);
        }
        
        private void OnSaveDataTableOperationCompleted(object arg) {
            if ((this.SaveDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDataTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDatabase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDatabase(int databaseid) {
            this.Invoke("DeleteDatabase", new object[] {
                        databaseid});
        }
        
        /// <remarks/>
        public void DeleteDatabaseAsync(int databaseid) {
            this.DeleteDatabaseAsync(databaseid, null);
        }
        
        /// <remarks/>
        public void DeleteDatabaseAsync(int databaseid, object userState) {
            if ((this.DeleteDatabaseOperationCompleted == null)) {
                this.DeleteDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDatabaseOperationCompleted);
            }
            this.InvokeAsync("DeleteDatabase", new object[] {
                        databaseid}, this.DeleteDatabaseOperationCompleted, userState);
        }
        
        private void OnDeleteDatabaseOperationCompleted(object arg) {
            if ((this.DeleteDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetActions(int databaseid) {
            object[] results = this.Invoke("GetActions", new object[] {
                        databaseid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetActionsAsync(int databaseid) {
            this.GetActionsAsync(databaseid, null);
        }
        
        /// <remarks/>
        public void GetActionsAsync(int databaseid, object userState) {
            if ((this.GetActionsOperationCompleted == null)) {
                this.GetActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActionsOperationCompleted);
            }
            this.InvokeAsync("GetActions", new object[] {
                        databaseid}, this.GetActionsOperationCompleted, userState);
        }
        
        private void OnGetActionsOperationCompleted(object arg) {
            if ((this.GetActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActionsCompleted(this, new GetActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveTableFromModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveTableFromModule(int tableInModuleId, int tableid) {
            this.Invoke("RemoveTableFromModule", new object[] {
                        tableInModuleId,
                        tableid});
        }
        
        /// <remarks/>
        public void RemoveTableFromModuleAsync(int tableInModuleId, int tableid) {
            this.RemoveTableFromModuleAsync(tableInModuleId, tableid, null);
        }
        
        /// <remarks/>
        public void RemoveTableFromModuleAsync(int tableInModuleId, int tableid, object userState) {
            if ((this.RemoveTableFromModuleOperationCompleted == null)) {
                this.RemoveTableFromModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTableFromModuleOperationCompleted);
            }
            this.InvokeAsync("RemoveTableFromModule", new object[] {
                        tableInModuleId,
                        tableid}, this.RemoveTableFromModuleOperationCompleted, userState);
        }
        
        private void OnRemoveTableFromModuleOperationCompleted(object arg) {
            if ((this.RemoveTableFromModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTableFromModuleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataTable([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bs, int tableid, int pageindex, int pagesize) {
            object[] results = this.Invoke("GetDataTable", new object[] {
                        bs,
                        tableid,
                        pageindex,
                        pagesize});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataTableAsync(byte[] bs, int tableid, int pageindex, int pagesize) {
            this.GetDataTableAsync(bs, tableid, pageindex, pagesize, null);
        }
        
        /// <remarks/>
        public void GetDataTableAsync(byte[] bs, int tableid, int pageindex, int pagesize, object userState) {
            if ((this.GetDataTableOperationCompleted == null)) {
                this.GetDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataTableOperationCompleted);
            }
            this.InvokeAsync("GetDataTable", new object[] {
                        bs,
                        tableid,
                        pageindex,
                        pagesize}, this.GetDataTableOperationCompleted, userState);
        }
        
        private void OnGetDataTableOperationCompleted(object arg) {
            if ((this.GetDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataTableCompleted(this, new GetDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImportData(System.Data.DataSet dset, int databaseid, bool clearDataFirst) {
            this.Invoke("ImportData", new object[] {
                        dset,
                        databaseid,
                        clearDataFirst});
        }
        
        /// <remarks/>
        public void ImportDataAsync(System.Data.DataSet dset, int databaseid, bool clearDataFirst) {
            this.ImportDataAsync(dset, databaseid, clearDataFirst, null);
        }
        
        /// <remarks/>
        public void ImportDataAsync(System.Data.DataSet dset, int databaseid, bool clearDataFirst, object userState) {
            if ((this.ImportDataOperationCompleted == null)) {
                this.ImportDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportDataOperationCompleted);
            }
            this.InvokeAsync("ImportData", new object[] {
                        dset,
                        databaseid,
                        clearDataFirst}, this.ImportDataOperationCompleted, userState);
        }
        
        private void OnImportDataOperationCompleted(object arg) {
            if ((this.ImportDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataSet(int[] tableids) {
            object[] results = this.Invoke("GetDataSet", new object[] {
                        tableids});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataSetAsync(int[] tableids) {
            this.GetDataSetAsync(tableids, null);
        }
        
        /// <remarks/>
        public void GetDataSetAsync(int[] tableids, object userState) {
            if ((this.GetDataSetOperationCompleted == null)) {
                this.GetDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataSetOperationCompleted);
            }
            this.InvokeAsync("GetDataSet", new object[] {
                        tableids}, this.GetDataSetOperationCompleted, userState);
        }
        
        private void OnGetDataSetOperationCompleted(object arg) {
            if ((this.GetDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataSetCompleted(this, new GetDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDatabase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDatabase(int databaseid) {
            object[] results = this.Invoke("GetDatabase", new object[] {
                        databaseid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabaseAsync(int databaseid) {
            this.GetDatabaseAsync(databaseid, null);
        }
        
        /// <remarks/>
        public void GetDatabaseAsync(int databaseid, object userState) {
            if ((this.GetDatabaseOperationCompleted == null)) {
                this.GetDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabaseOperationCompleted);
            }
            this.InvokeAsync("GetDatabase", new object[] {
                        databaseid}, this.GetDatabaseOperationCompleted, userState);
        }
        
        private void OnGetDatabaseOperationCompleted(object arg) {
            if ((this.GetDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabaseCompleted(this, new GetDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDatabaseList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDatabaseList(int projectid) {
            object[] results = this.Invoke("GetDatabaseList", new object[] {
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabaseListAsync(int projectid) {
            this.GetDatabaseListAsync(projectid, null);
        }
        
        /// <remarks/>
        public void GetDatabaseListAsync(int projectid, object userState) {
            if ((this.GetDatabaseListOperationCompleted == null)) {
                this.GetDatabaseListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabaseListOperationCompleted);
            }
            this.InvokeAsync("GetDatabaseList", new object[] {
                        projectid}, this.GetDatabaseListOperationCompleted, userState);
        }
        
        private void OnGetDatabaseListOperationCompleted(object arg) {
            if ((this.GetDatabaseListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabaseListCompleted(this, new GetDatabaseListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBModuleID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDBModuleID(int tableid) {
            object[] results = this.Invoke("GetDBModuleID", new object[] {
                        tableid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBModuleIDAsync(int tableid) {
            this.GetDBModuleIDAsync(tableid, null);
        }
        
        /// <remarks/>
        public void GetDBModuleIDAsync(int tableid, object userState) {
            if ((this.GetDBModuleIDOperationCompleted == null)) {
                this.GetDBModuleIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBModuleIDOperationCompleted);
            }
            this.InvokeAsync("GetDBModuleID", new object[] {
                        tableid}, this.GetDBModuleIDOperationCompleted, userState);
        }
        
        private void OnGetDBModuleIDOperationCompleted(object arg) {
            if ((this.GetDBModuleIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBModuleIDCompleted(this, new GetDBModuleIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTableInMoudle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateTableInMoudle(string tableInModule) {
            object[] results = this.Invoke("UpdateTableInMoudle", new object[] {
                        tableInModule});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTableInMoudleAsync(string tableInModule) {
            this.UpdateTableInMoudleAsync(tableInModule, null);
        }
        
        /// <remarks/>
        public void UpdateTableInMoudleAsync(string tableInModule, object userState) {
            if ((this.UpdateTableInMoudleOperationCompleted == null)) {
                this.UpdateTableInMoudleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTableInMoudleOperationCompleted);
            }
            this.InvokeAsync("UpdateTableInMoudle", new object[] {
                        tableInModule}, this.UpdateTableInMoudleOperationCompleted, userState);
        }
        
        private void OnUpdateTableInMoudleOperationCompleted(object arg) {
            if ((this.UpdateTableInMoudleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTableInMoudleCompleted(this, new UpdateTableInMoudleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeleteConfigInModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeleteConfigInModule(int moduleid) {
            object[] results = this.Invoke("GetDeleteConfigInModule", new object[] {
                        moduleid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeleteConfigInModuleAsync(int moduleid) {
            this.GetDeleteConfigInModuleAsync(moduleid, null);
        }
        
        /// <remarks/>
        public void GetDeleteConfigInModuleAsync(int moduleid, object userState) {
            if ((this.GetDeleteConfigInModuleOperationCompleted == null)) {
                this.GetDeleteConfigInModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeleteConfigInModuleOperationCompleted);
            }
            this.InvokeAsync("GetDeleteConfigInModule", new object[] {
                        moduleid}, this.GetDeleteConfigInModuleOperationCompleted, userState);
        }
        
        private void OnGetDeleteConfigInModuleOperationCompleted(object arg) {
            if ((this.GetDeleteConfigInModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeleteConfigInModuleCompleted(this, new GetDeleteConfigInModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTableNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetTableNames(int databaseid) {
            object[] results = this.Invoke("GetTableNames", new object[] {
                        databaseid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTableNamesAsync(int databaseid) {
            this.GetTableNamesAsync(databaseid, null);
        }
        
        /// <remarks/>
        public void GetTableNamesAsync(int databaseid, object userState) {
            if ((this.GetTableNamesOperationCompleted == null)) {
                this.GetTableNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableNamesOperationCompleted);
            }
            this.InvokeAsync("GetTableNames", new object[] {
                        databaseid}, this.GetTableNamesOperationCompleted, userState);
        }
        
        private void OnGetTableNamesOperationCompleted(object arg) {
            if ((this.GetTableNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableNamesCompleted(this, new GetTableNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetColumnNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetColumnNames(int databaseid, string tableName) {
            object[] results = this.Invoke("GetColumnNames", new object[] {
                        databaseid,
                        tableName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetColumnNamesAsync(int databaseid, string tableName) {
            this.GetColumnNamesAsync(databaseid, tableName, null);
        }
        
        /// <remarks/>
        public void GetColumnNamesAsync(int databaseid, string tableName, object userState) {
            if ((this.GetColumnNamesOperationCompleted == null)) {
                this.GetColumnNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetColumnNamesOperationCompleted);
            }
            this.InvokeAsync("GetColumnNames", new object[] {
                        databaseid,
                        tableName}, this.GetColumnNamesOperationCompleted, userState);
        }
        
        private void OnGetColumnNamesOperationCompleted(object arg) {
            if ((this.GetColumnNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetColumnNamesCompleted(this, new GetColumnNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetColumns", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetColumns(int tableid) {
            object[] results = this.Invoke("GetColumns", new object[] {
                        tableid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetColumnsAsync(int tableid) {
            this.GetColumnsAsync(tableid, null);
        }
        
        /// <remarks/>
        public void GetColumnsAsync(int tableid, object userState) {
            if ((this.GetColumnsOperationCompleted == null)) {
                this.GetColumnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetColumnsOperationCompleted);
            }
            this.InvokeAsync("GetColumns", new object[] {
                        tableid}, this.GetColumnsOperationCompleted, userState);
        }
        
        private void OnGetColumnsOperationCompleted(object arg) {
            if ((this.GetColumnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetColumnsCompleted(this, new GetColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBModuleList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDBModuleList(int databaseid, int parentid) {
            object[] results = this.Invoke("GetDBModuleList", new object[] {
                        databaseid,
                        parentid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBModuleListAsync(int databaseid, int parentid) {
            this.GetDBModuleListAsync(databaseid, parentid, null);
        }
        
        /// <remarks/>
        public void GetDBModuleListAsync(int databaseid, int parentid, object userState) {
            if ((this.GetDBModuleListOperationCompleted == null)) {
                this.GetDBModuleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBModuleListOperationCompleted);
            }
            this.InvokeAsync("GetDBModuleList", new object[] {
                        databaseid,
                        parentid}, this.GetDBModuleListOperationCompleted, userState);
        }
        
        private void OnGetDBModuleListOperationCompleted(object arg) {
            if ((this.GetDBModuleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBModuleListCompleted(this, new GetDBModuleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTableDeleteConfigList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTableDeleteConfigList(int tableid) {
            object[] results = this.Invoke("GetTableDeleteConfigList", new object[] {
                        tableid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTableDeleteConfigListAsync(int tableid) {
            this.GetTableDeleteConfigListAsync(tableid, null);
        }
        
        /// <remarks/>
        public void GetTableDeleteConfigListAsync(int tableid, object userState) {
            if ((this.GetTableDeleteConfigListOperationCompleted == null)) {
                this.GetTableDeleteConfigListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableDeleteConfigListOperationCompleted);
            }
            this.InvokeAsync("GetTableDeleteConfigList", new object[] {
                        tableid}, this.GetTableDeleteConfigListOperationCompleted, userState);
        }
        
        private void OnGetTableDeleteConfigListOperationCompleted(object arg) {
            if ((this.GetTableDeleteConfigListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableDeleteConfigListCompleted(this, new GetTableDeleteConfigListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTableIDXIndexList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTableIDXIndexList(int tableid) {
            object[] results = this.Invoke("GetTableIDXIndexList", new object[] {
                        tableid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTableIDXIndexListAsync(int tableid) {
            this.GetTableIDXIndexListAsync(tableid, null);
        }
        
        /// <remarks/>
        public void GetTableIDXIndexListAsync(int tableid, object userState) {
            if ((this.GetTableIDXIndexListOperationCompleted == null)) {
                this.GetTableIDXIndexListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableIDXIndexListOperationCompleted);
            }
            this.InvokeAsync("GetTableIDXIndexList", new object[] {
                        tableid}, this.GetTableIDXIndexListOperationCompleted, userState);
        }
        
        private void OnGetTableIDXIndexListOperationCompleted(object arg) {
            if ((this.GetTableIDXIndexListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableIDXIndexListCompleted(this, new GetTableIDXIndexListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTableList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTableList(int databaseid) {
            object[] results = this.Invoke("GetTableList", new object[] {
                        databaseid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTableListAsync(int databaseid) {
            this.GetTableListAsync(databaseid, null);
        }
        
        /// <remarks/>
        public void GetTableListAsync(int databaseid, object userState) {
            if ((this.GetTableListOperationCompleted == null)) {
                this.GetTableListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableListOperationCompleted);
            }
            this.InvokeAsync("GetTableList", new object[] {
                        databaseid}, this.GetTableListOperationCompleted, userState);
        }
        
        private void OnGetTableListOperationCompleted(object arg) {
            if ((this.GetTableListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableListCompleted(this, new GetTableListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetObjectFormat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetObjectFormat(int tableid) {
            object[] results = this.Invoke("GetObjectFormat", new object[] {
                        tableid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectFormatAsync(int tableid) {
            this.GetObjectFormatAsync(tableid, null);
        }
        
        /// <remarks/>
        public void GetObjectFormatAsync(int tableid, object userState) {
            if ((this.GetObjectFormatOperationCompleted == null)) {
                this.GetObjectFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectFormatOperationCompleted);
            }
            this.InvokeAsync("GetObjectFormat", new object[] {
                        tableid}, this.GetObjectFormatOperationCompleted, userState);
        }
        
        private void OnGetObjectFormatOperationCompleted(object arg) {
            if ((this.GetObjectFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectFormatCompleted(this, new GetObjectFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetColumnList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetColumnList(int tableid) {
            object[] results = this.Invoke("GetColumnList", new object[] {
                        tableid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetColumnListAsync(int tableid) {
            this.GetColumnListAsync(tableid, null);
        }
        
        /// <remarks/>
        public void GetColumnListAsync(int tableid, object userState) {
            if ((this.GetColumnListOperationCompleted == null)) {
                this.GetColumnListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetColumnListOperationCompleted);
            }
            this.InvokeAsync("GetColumnList", new object[] {
                        tableid}, this.GetColumnListOperationCompleted, userState);
        }
        
        private void OnGetColumnListOperationCompleted(object arg) {
            if ((this.GetColumnListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetColumnListCompleted(this, new GetColumnListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyTable(string newtablejson, string nowcolumnsjson, string deleteConfigJson, string idxJson) {
            this.Invoke("ModifyTable", new object[] {
                        newtablejson,
                        nowcolumnsjson,
                        deleteConfigJson,
                        idxJson});
        }
        
        /// <remarks/>
        public void ModifyTableAsync(string newtablejson, string nowcolumnsjson, string deleteConfigJson, string idxJson) {
            this.ModifyTableAsync(newtablejson, nowcolumnsjson, deleteConfigJson, idxJson, null);
        }
        
        /// <remarks/>
        public void ModifyTableAsync(string newtablejson, string nowcolumnsjson, string deleteConfigJson, string idxJson, object userState) {
            if ((this.ModifyTableOperationCompleted == null)) {
                this.ModifyTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyTableOperationCompleted);
            }
            this.InvokeAsync("ModifyTable", new object[] {
                        newtablejson,
                        nowcolumnsjson,
                        deleteConfigJson,
                        idxJson}, this.ModifyTableOperationCompleted, userState);
        }
        
        private void OnModifyTableOperationCompleted(object arg) {
            if ((this.ModifyTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteModule(string modulestring) {
            this.Invoke("DeleteModule", new object[] {
                        modulestring});
        }
        
        /// <remarks/>
        public void DeleteModuleAsync(string modulestring) {
            this.DeleteModuleAsync(modulestring, null);
        }
        
        /// <remarks/>
        public void DeleteModuleAsync(string modulestring, object userState) {
            if ((this.DeleteModuleOperationCompleted == null)) {
                this.DeleteModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteModuleOperationCompleted);
            }
            this.InvokeAsync("DeleteModule", new object[] {
                        modulestring}, this.DeleteModuleOperationCompleted, userState);
        }
        
        private void OnDeleteModuleOperationCompleted(object arg) {
            if ((this.DeleteModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteModuleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBTablePath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDBTablePath(int tableid) {
            object[] results = this.Invoke("GetDBTablePath", new object[] {
                        tableid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBTablePathAsync(int tableid) {
            this.GetDBTablePathAsync(tableid, null);
        }
        
        /// <remarks/>
        public void GetDBTablePathAsync(int tableid, object userState) {
            if ((this.GetDBTablePathOperationCompleted == null)) {
                this.GetDBTablePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBTablePathOperationCompleted);
            }
            this.InvokeAsync("GetDBTablePath", new object[] {
                        tableid}, this.GetDBTablePathOperationCompleted, userState);
        }
        
        private void OnGetDBTablePathOperationCompleted(object arg) {
            if ((this.GetDBTablePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBTablePathCompleted(this, new GetDBTablePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBModulePath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDBModulePath(int moduleid) {
            object[] results = this.Invoke("GetDBModulePath", new object[] {
                        moduleid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBModulePathAsync(int moduleid) {
            this.GetDBModulePathAsync(moduleid, null);
        }
        
        /// <remarks/>
        public void GetDBModulePathAsync(int moduleid, object userState) {
            if ((this.GetDBModulePathOperationCompleted == null)) {
                this.GetDBModulePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBModulePathOperationCompleted);
            }
            this.InvokeAsync("GetDBModulePath", new object[] {
                        moduleid}, this.GetDBModulePathOperationCompleted, userState);
        }
        
        private void OnGetDBModulePathOperationCompleted(object arg) {
            if ((this.GetDBModulePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBModulePathCompleted(this, new GetDBModulePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDBModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateDBModule(string modulestring) {
            object[] results = this.Invoke("UpdateDBModule", new object[] {
                        modulestring});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDBModuleAsync(string modulestring) {
            this.UpdateDBModuleAsync(modulestring, null);
        }
        
        /// <remarks/>
        public void UpdateDBModuleAsync(string modulestring, object userState) {
            if ((this.UpdateDBModuleOperationCompleted == null)) {
                this.UpdateDBModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDBModuleOperationCompleted);
            }
            this.InvokeAsync("UpdateDBModule", new object[] {
                        modulestring}, this.UpdateDBModuleOperationCompleted, userState);
        }
        
        private void OnUpdateDBModuleOperationCompleted(object arg) {
            if ((this.UpdateDBModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDBModuleCompleted(this, new UpdateDBModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTable(int databaseID, string tableName) {
            this.Invoke("DeleteTable", new object[] {
                        databaseID,
                        tableName});
        }
        
        /// <remarks/>
        public void DeleteTableAsync(int databaseID, string tableName) {
            this.DeleteTableAsync(databaseID, tableName, null);
        }
        
        /// <remarks/>
        public void DeleteTableAsync(int databaseID, string tableName, object userState) {
            if ((this.DeleteTableOperationCompleted == null)) {
                this.DeleteTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTableOperationCompleted);
            }
            this.InvokeAsync("DeleteTable", new object[] {
                        databaseID,
                        tableName}, this.DeleteTableOperationCompleted, userState);
        }
        
        private void OnDeleteTableOperationCompleted(object arg) {
            if ((this.DeleteTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTable(string tablejson, string columnsJson, string deleteConfigJson, string idxJson) {
            object[] results = this.Invoke("CreateTable", new object[] {
                        tablejson,
                        columnsJson,
                        deleteConfigJson,
                        idxJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTableAsync(string tablejson, string columnsJson, string deleteConfigJson, string idxJson) {
            this.CreateTableAsync(tablejson, columnsJson, deleteConfigJson, idxJson, null);
        }
        
        /// <remarks/>
        public void CreateTableAsync(string tablejson, string columnsJson, string deleteConfigJson, string idxJson, object userState) {
            if ((this.CreateTableOperationCompleted == null)) {
                this.CreateTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTableOperationCompleted);
            }
            this.InvokeAsync("CreateTable", new object[] {
                        tablejson,
                        columnsJson,
                        deleteConfigJson,
                        idxJson}, this.CreateTableOperationCompleted, userState);
        }
        
        private void OnCreateTableOperationCompleted(object arg) {
            if ((this.CreateTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTableCompleted(this, new CreateTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportDatabaseConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ImportDatabaseConfig(int projectid, string databaseJson, System.Data.DataSet dset) {
            object[] results = this.Invoke("ImportDatabaseConfig", new object[] {
                        projectid,
                        databaseJson,
                        dset});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ImportDatabaseConfigAsync(int projectid, string databaseJson, System.Data.DataSet dset) {
            this.ImportDatabaseConfigAsync(projectid, databaseJson, dset, null);
        }
        
        /// <remarks/>
        public void ImportDatabaseConfigAsync(int projectid, string databaseJson, System.Data.DataSet dset, object userState) {
            if ((this.ImportDatabaseConfigOperationCompleted == null)) {
                this.ImportDatabaseConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportDatabaseConfigOperationCompleted);
            }
            this.InvokeAsync("ImportDatabaseConfig", new object[] {
                        projectid,
                        databaseJson,
                        dset}, this.ImportDatabaseConfigOperationCompleted, userState);
        }
        
        private void OnImportDatabaseConfigOperationCompleted(object arg) {
            if ((this.ImportDatabaseConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportDatabaseConfigCompleted(this, new ImportDatabaseConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateDatabase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateDatabase(int projectid, DatabaseType databaseType, string connectionString, string dllpath, string dbname) {
            this.Invoke("CreateDatabase", new object[] {
                        projectid,
                        databaseType,
                        connectionString,
                        dllpath,
                        dbname});
        }
        
        /// <remarks/>
        public void CreateDatabaseAsync(int projectid, DatabaseType databaseType, string connectionString, string dllpath, string dbname) {
            this.CreateDatabaseAsync(projectid, databaseType, connectionString, dllpath, dbname, null);
        }
        
        /// <remarks/>
        public void CreateDatabaseAsync(int projectid, DatabaseType databaseType, string connectionString, string dllpath, string dbname, object userState) {
            if ((this.CreateDatabaseOperationCompleted == null)) {
                this.CreateDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDatabaseOperationCompleted);
            }
            this.InvokeAsync("CreateDatabase", new object[] {
                        projectid,
                        databaseType,
                        connectionString,
                        dllpath,
                        dbname}, this.CreateDatabaseOperationCompleted, userState);
        }
        
        private void OnCreateDatabaseOperationCompleted(object arg) {
            if ((this.CreateDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectDllFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetProjectDllFiles(int projectid) {
            object[] results = this.Invoke("GetProjectDllFiles", new object[] {
                        projectid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectDllFilesAsync(int projectid) {
            this.GetProjectDllFilesAsync(projectid, null);
        }
        
        /// <remarks/>
        public void GetProjectDllFilesAsync(int projectid, object userState) {
            if ((this.GetProjectDllFilesOperationCompleted == null)) {
                this.GetProjectDllFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectDllFilesOperationCompleted);
            }
            this.InvokeAsync("GetProjectDllFiles", new object[] {
                        projectid}, this.GetProjectDllFilesOperationCompleted, userState);
        }
        
        private void OnGetProjectDllFilesOperationCompleted(object arg) {
            if ((this.GetProjectDllFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectDllFilesCompleted(this, new GetProjectDllFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInterfaceModuleList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInterfaceModuleList(int projectid, int parentid) {
            object[] results = this.Invoke("GetInterfaceModuleList", new object[] {
                        projectid,
                        parentid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInterfaceModuleListAsync(int projectid, int parentid) {
            this.GetInterfaceModuleListAsync(projectid, parentid, null);
        }
        
        /// <remarks/>
        public void GetInterfaceModuleListAsync(int projectid, int parentid, object userState) {
            if ((this.GetInterfaceModuleListOperationCompleted == null)) {
                this.GetInterfaceModuleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInterfaceModuleListOperationCompleted);
            }
            this.InvokeAsync("GetInterfaceModuleList", new object[] {
                        projectid,
                        parentid}, this.GetInterfaceModuleListOperationCompleted, userState);
        }
        
        private void OnGetInterfaceModuleListOperationCompleted(object arg) {
            if ((this.GetInterfaceModuleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInterfaceModuleListCompleted(this, new GetInterfaceModuleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteInterfaceModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteInterfaceModule(string modulestring) {
            this.Invoke("DeleteInterfaceModule", new object[] {
                        modulestring});
        }
        
        /// <remarks/>
        public void DeleteInterfaceModuleAsync(string modulestring) {
            this.DeleteInterfaceModuleAsync(modulestring, null);
        }
        
        /// <remarks/>
        public void DeleteInterfaceModuleAsync(string modulestring, object userState) {
            if ((this.DeleteInterfaceModuleOperationCompleted == null)) {
                this.DeleteInterfaceModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInterfaceModuleOperationCompleted);
            }
            this.InvokeAsync("DeleteInterfaceModule", new object[] {
                        modulestring}, this.DeleteInterfaceModuleOperationCompleted, userState);
        }
        
        private void OnDeleteInterfaceModuleOperationCompleted(object arg) {
            if ((this.DeleteInterfaceModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInterfaceModuleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnLockInterfaceModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnLockInterfaceModule(int moduleid) {
            this.Invoke("UnLockInterfaceModule", new object[] {
                        moduleid});
        }
        
        /// <remarks/>
        public void UnLockInterfaceModuleAsync(int moduleid) {
            this.UnLockInterfaceModuleAsync(moduleid, null);
        }
        
        /// <remarks/>
        public void UnLockInterfaceModuleAsync(int moduleid, object userState) {
            if ((this.UnLockInterfaceModuleOperationCompleted == null)) {
                this.UnLockInterfaceModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnLockInterfaceModuleOperationCompleted);
            }
            this.InvokeAsync("UnLockInterfaceModule", new object[] {
                        moduleid}, this.UnLockInterfaceModuleOperationCompleted, userState);
        }
        
        private void OnUnLockInterfaceModuleOperationCompleted(object arg) {
            if ((this.UnLockInterfaceModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnLockInterfaceModuleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LockInterfaceModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LockInterfaceModule(int moduleid) {
            object[] results = this.Invoke("LockInterfaceModule", new object[] {
                        moduleid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LockInterfaceModuleAsync(int moduleid) {
            this.LockInterfaceModuleAsync(moduleid, null);
        }
        
        /// <remarks/>
        public void LockInterfaceModuleAsync(int moduleid, object userState) {
            if ((this.LockInterfaceModuleOperationCompleted == null)) {
                this.LockInterfaceModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockInterfaceModuleOperationCompleted);
            }
            this.InvokeAsync("LockInterfaceModule", new object[] {
                        moduleid}, this.LockInterfaceModuleOperationCompleted, userState);
        }
        
        private void OnLockInterfaceModuleOperationCompleted(object arg) {
            if ((this.LockInterfaceModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockInterfaceModuleCompleted(this, new LockInterfaceModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInterfaceModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateInterfaceModule(string modulestring) {
            object[] results = this.Invoke("UpdateInterfaceModule", new object[] {
                        modulestring});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInterfaceModuleAsync(string modulestring) {
            this.UpdateInterfaceModuleAsync(modulestring, null);
        }
        
        /// <remarks/>
        public void UpdateInterfaceModuleAsync(string modulestring, object userState) {
            if ((this.UpdateInterfaceModuleOperationCompleted == null)) {
                this.UpdateInterfaceModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInterfaceModuleOperationCompleted);
            }
            this.InvokeAsync("UpdateInterfaceModule", new object[] {
                        modulestring}, this.UpdateInterfaceModuleOperationCompleted, userState);
        }
        
        private void OnUpdateInterfaceModuleOperationCompleted(object arg) {
            if ((this.UpdateInterfaceModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInterfaceModuleCompleted(this, new UpdateInterfaceModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInterfaceModulePath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInterfaceModulePath(int moduleid) {
            object[] results = this.Invoke("GetInterfaceModulePath", new object[] {
                        moduleid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInterfaceModulePathAsync(int moduleid) {
            this.GetInterfaceModulePathAsync(moduleid, null);
        }
        
        /// <remarks/>
        public void GetInterfaceModulePathAsync(int moduleid, object userState) {
            if ((this.GetInterfaceModulePathOperationCompleted == null)) {
                this.GetInterfaceModulePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInterfaceModulePathOperationCompleted);
            }
            this.InvokeAsync("GetInterfaceModulePath", new object[] {
                        moduleid}, this.GetInterfaceModulePathOperationCompleted, userState);
        }
        
        private void OnGetInterfaceModulePathOperationCompleted(object arg) {
            if ((this.GetInterfaceModulePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInterfaceModulePathCompleted(this, new GetInterfaceModulePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInterfaceInModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateInterfaceInModule(string mJonsString) {
            object[] results = this.Invoke("UpdateInterfaceInModule", new object[] {
                        mJonsString});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInterfaceInModuleAsync(string mJonsString) {
            this.UpdateInterfaceInModuleAsync(mJonsString, null);
        }
        
        /// <remarks/>
        public void UpdateInterfaceInModuleAsync(string mJonsString, object userState) {
            if ((this.UpdateInterfaceInModuleOperationCompleted == null)) {
                this.UpdateInterfaceInModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInterfaceInModuleOperationCompleted);
            }
            this.InvokeAsync("UpdateInterfaceInModule", new object[] {
                        mJonsString}, this.UpdateInterfaceInModuleOperationCompleted, userState);
        }
        
        private void OnUpdateInterfaceInModuleOperationCompleted(object arg) {
            if ((this.UpdateInterfaceInModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInterfaceInModuleCompleted(this, new UpdateInterfaceInModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteInterfaceInModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteInterfaceInModule(string mJonsString) {
            this.Invoke("DeleteInterfaceInModule", new object[] {
                        mJonsString});
        }
        
        /// <remarks/>
        public void DeleteInterfaceInModuleAsync(string mJonsString) {
            this.DeleteInterfaceInModuleAsync(mJonsString, null);
        }
        
        /// <remarks/>
        public void DeleteInterfaceInModuleAsync(string mJonsString, object userState) {
            if ((this.DeleteInterfaceInModuleOperationCompleted == null)) {
                this.DeleteInterfaceInModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInterfaceInModuleOperationCompleted);
            }
            this.InvokeAsync("DeleteInterfaceInModule", new object[] {
                        mJonsString}, this.DeleteInterfaceInModuleOperationCompleted, userState);
        }
        
        private void OnDeleteInterfaceInModuleOperationCompleted(object arg) {
            if ((this.DeleteInterfaceInModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInterfaceInModuleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInterfaceInModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInterfaceInModule(int moduleid) {
            object[] results = this.Invoke("GetInterfaceInModule", new object[] {
                        moduleid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInterfaceInModuleAsync(int moduleid) {
            this.GetInterfaceInModuleAsync(moduleid, null);
        }
        
        /// <remarks/>
        public void GetInterfaceInModuleAsync(int moduleid, object userState) {
            if ((this.GetInterfaceInModuleOperationCompleted == null)) {
                this.GetInterfaceInModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInterfaceInModuleOperationCompleted);
            }
            this.InvokeAsync("GetInterfaceInModule", new object[] {
                        moduleid}, this.GetInterfaceInModuleOperationCompleted, userState);
        }
        
        private void OnGetInterfaceInModuleOperationCompleted(object arg) {
            if ((this.GetInterfaceInModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInterfaceInModuleCompleted(this, new GetInterfaceInModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInterfaceModuleID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetInterfaceModuleID(int interfaceInModuleId) {
            object[] results = this.Invoke("GetInterfaceModuleID", new object[] {
                        interfaceInModuleId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetInterfaceModuleIDAsync(int interfaceInModuleId) {
            this.GetInterfaceModuleIDAsync(interfaceInModuleId, null);
        }
        
        /// <remarks/>
        public void GetInterfaceModuleIDAsync(int interfaceInModuleId, object userState) {
            if ((this.GetInterfaceModuleIDOperationCompleted == null)) {
                this.GetInterfaceModuleIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInterfaceModuleIDOperationCompleted);
            }
            this.InvokeAsync("GetInterfaceModuleID", new object[] {
                        interfaceInModuleId}, this.GetInterfaceModuleIDOperationCompleted, userState);
        }
        
        private void OnGetInterfaceModuleIDOperationCompleted(object arg) {
            if ((this.GetInterfaceModuleIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInterfaceModuleIDCompleted(this, new GetInterfaceModuleIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInterfaceInModulePath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInterfaceInModulePath(int itemid) {
            object[] results = this.Invoke("GetInterfaceInModulePath", new object[] {
                        itemid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInterfaceInModulePathAsync(int itemid) {
            this.GetInterfaceInModulePathAsync(itemid, null);
        }
        
        /// <remarks/>
        public void GetInterfaceInModulePathAsync(int itemid, object userState) {
            if ((this.GetInterfaceInModulePathOperationCompleted == null)) {
                this.GetInterfaceInModulePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInterfaceInModulePathOperationCompleted);
            }
            this.InvokeAsync("GetInterfaceInModulePath", new object[] {
                        itemid}, this.GetInterfaceInModulePathOperationCompleted, userState);
        }
        
        private void OnGetInterfaceInModulePathOperationCompleted(object arg) {
            if ((this.GetInterfaceInModulePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInterfaceInModulePathCompleted(this, new GetInterfaceInModulePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Search", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Search(string key, int pagesize, int pageindex) {
            object[] results = this.Invoke("Search", new object[] {
                        key,
                        pagesize,
                        pageindex});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(string key, int pagesize, int pageindex) {
            this.SearchAsync(key, pagesize, pageindex, null);
        }
        
        /// <remarks/>
        public void SearchAsync(string key, int pagesize, int pageindex, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        key,
                        pagesize,
                        pageindex}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitBug", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitBug(string title, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] textContent, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] picContent) {
            this.Invoke("SubmitBug", new object[] {
                        title,
                        textContent,
                        picContent});
        }
        
        /// <remarks/>
        public void SubmitBugAsync(string title, byte[] textContent, byte[] picContent) {
            this.SubmitBugAsync(title, textContent, picContent, null);
        }
        
        /// <remarks/>
        public void SubmitBugAsync(string title, byte[] textContent, byte[] picContent, object userState) {
            if ((this.SubmitBugOperationCompleted == null)) {
                this.SubmitBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitBugOperationCompleted);
            }
            this.InvokeAsync("SubmitBug", new object[] {
                        title,
                        textContent,
                        picContent}, this.SubmitBugOperationCompleted, userState);
        }
        
        private void OnSubmitBugOperationCompleted(object arg) {
            if ((this.SubmitBugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitBugCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyBugListCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMyBugListCount() {
            object[] results = this.Invoke("GetMyBugListCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyBugListCountAsync() {
            this.GetMyBugListCountAsync(null);
        }
        
        /// <remarks/>
        public void GetMyBugListCountAsync(object userState) {
            if ((this.GetMyBugListCountOperationCompleted == null)) {
                this.GetMyBugListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyBugListCountOperationCompleted);
            }
            this.InvokeAsync("GetMyBugListCount", new object[0], this.GetMyBugListCountOperationCompleted, userState);
        }
        
        private void OnGetMyBugListCountOperationCompleted(object arg) {
            if ((this.GetMyBugListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyBugListCountCompleted(this, new GetMyBugListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyBugs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMyBugs() {
            object[] results = this.Invoke("GetMyBugs", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyBugsAsync() {
            this.GetMyBugsAsync(null);
        }
        
        /// <remarks/>
        public void GetMyBugsAsync(object userState) {
            if ((this.GetMyBugsOperationCompleted == null)) {
                this.GetMyBugsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyBugsOperationCompleted);
            }
            this.InvokeAsync("GetMyBugs", new object[0], this.GetMyBugsOperationCompleted, userState);
        }
        
        private void OnGetMyBugsOperationCompleted(object arg) {
            if ((this.GetMyBugsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyBugsCompleted(this, new GetMyBugsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBugHistories", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBugHistories(int bugid) {
            object[] results = this.Invoke("GetBugHistories", new object[] {
                        bugid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugHistoriesAsync(int bugid) {
            this.GetBugHistoriesAsync(bugid, null);
        }
        
        /// <remarks/>
        public void GetBugHistoriesAsync(int bugid, object userState) {
            if ((this.GetBugHistoriesOperationCompleted == null)) {
                this.GetBugHistoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugHistoriesOperationCompleted);
            }
            this.InvokeAsync("GetBugHistories", new object[] {
                        bugid}, this.GetBugHistoriesOperationCompleted, userState);
        }
        
        private void OnGetBugHistoriesOperationCompleted(object arg) {
            if ((this.GetBugHistoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugHistoriesCompleted(this, new GetBugHistoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBugPicture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetBugPicture(int bugid) {
            object[] results = this.Invoke("GetBugPicture", new object[] {
                        bugid});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBugPictureAsync(int bugid) {
            this.GetBugPictureAsync(bugid, null);
        }
        
        /// <remarks/>
        public void GetBugPictureAsync(int bugid, object userState) {
            if ((this.GetBugPictureOperationCompleted == null)) {
                this.GetBugPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugPictureOperationCompleted);
            }
            this.InvokeAsync("GetBugPicture", new object[] {
                        bugid}, this.GetBugPictureOperationCompleted, userState);
        }
        
        private void OnGetBugPictureOperationCompleted(object arg) {
            if ((this.GetBugPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugPictureCompleted(this, new GetBugPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BugFinish", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BugFinish(int bugid) {
            this.Invoke("BugFinish", new object[] {
                        bugid});
        }
        
        /// <remarks/>
        public void BugFinishAsync(int bugid) {
            this.BugFinishAsync(bugid, null);
        }
        
        /// <remarks/>
        public void BugFinishAsync(int bugid, object userState) {
            if ((this.BugFinishOperationCompleted == null)) {
                this.BugFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBugFinishOperationCompleted);
            }
            this.InvokeAsync("BugFinish", new object[] {
                        bugid}, this.BugFinishOperationCompleted, userState);
        }
        
        private void OnBugFinishOperationCompleted(object arg) {
            if ((this.BugFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BugFinishCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitHistory(int bugid, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] txtContent) {
            this.Invoke("SubmitHistory", new object[] {
                        bugid,
                        txtContent});
        }
        
        /// <remarks/>
        public void SubmitHistoryAsync(int bugid, byte[] txtContent) {
            this.SubmitHistoryAsync(bugid, txtContent, null);
        }
        
        /// <remarks/>
        public void SubmitHistoryAsync(int bugid, byte[] txtContent, object userState) {
            if ((this.SubmitHistoryOperationCompleted == null)) {
                this.SubmitHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitHistoryOperationCompleted);
            }
            this.InvokeAsync("SubmitHistory", new object[] {
                        bugid,
                        txtContent}, this.SubmitHistoryOperationCompleted, userState);
        }
        
        private void OnSubmitHistoryOperationCompleted(object arg) {
            if ((this.SubmitHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitHistoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateFileList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUpdateFileList() {
            object[] results = this.Invoke("GetUpdateFileList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateFileListAsync() {
            this.GetUpdateFileListAsync(null);
        }
        
        /// <remarks/>
        public void GetUpdateFileListAsync(object userState) {
            if ((this.GetUpdateFileListOperationCompleted == null)) {
                this.GetUpdateFileListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateFileListOperationCompleted);
            }
            this.InvokeAsync("GetUpdateFileList", new object[0], this.GetUpdateFileListOperationCompleted, userState);
        }
        
        private void OnGetUpdateFileListOperationCompleted(object arg) {
            if ((this.GetUpdateFileListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateFileListCompleted(this, new GetUpdateFileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownLoadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownLoadFile(string savepath) {
            object[] results = this.Invoke("DownLoadFile", new object[] {
                        savepath});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownLoadFileAsync(string savepath) {
            this.DownLoadFileAsync(savepath, null);
        }
        
        /// <remarks/>
        public void DownLoadFileAsync(string savepath, object userState) {
            if ((this.DownLoadFileOperationCompleted == null)) {
                this.DownLoadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownLoadFileOperationCompleted);
            }
            this.InvokeAsync("DownLoadFile", new object[] {
                        savepath}, this.DownLoadFileOperationCompleted, userState);
        }
        
        private void OnDownLoadFileOperationCompleted(object arg) {
            if ((this.DownLoadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownLoadFileCompleted(this, new DownLoadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum DatabaseType {
        
        /// <remarks/>
        SqlServer,
        
        /// <remarks/>
        Sqlite,
        
        /// <remarks/>
        MySql,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void testCompletedEventHandler(object sender, testCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateProjectCompletedEventHandler(object sender, CreateProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserNameByIDCompletedEventHandler(object sender, GetUserNameByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserNameByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserNameByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ChangeModuleParentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCurrentUserProjectListCompletedEventHandler(object sender, GetCurrentUserProjectListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentUserProjectListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentUserProjectListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTablesInModuleCompletedEventHandler(object sender, GetTablesInModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTablesInModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTablesInModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPkColumnNameCompletedEventHandler(object sender, GetPkColumnNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPkColumnNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPkColumnNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveDataTableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetActionsCompletedEventHandler(object sender, GetActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RemoveTableFromModuleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDataTableCompletedEventHandler(object sender, GetDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ImportDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDataSetCompletedEventHandler(object sender, GetDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDatabaseCompletedEventHandler(object sender, GetDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDatabaseListCompletedEventHandler(object sender, GetDatabaseListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabaseListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabaseListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDBModuleIDCompletedEventHandler(object sender, GetDBModuleIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBModuleIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBModuleIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateTableInMoudleCompletedEventHandler(object sender, UpdateTableInMoudleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTableInMoudleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTableInMoudleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDeleteConfigInModuleCompletedEventHandler(object sender, GetDeleteConfigInModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeleteConfigInModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeleteConfigInModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTableNamesCompletedEventHandler(object sender, GetTableNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTableNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetColumnNamesCompletedEventHandler(object sender, GetColumnNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetColumnNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetColumnNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetColumnsCompletedEventHandler(object sender, GetColumnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetColumnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetColumnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDBModuleListCompletedEventHandler(object sender, GetDBModuleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBModuleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBModuleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTableDeleteConfigListCompletedEventHandler(object sender, GetTableDeleteConfigListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableDeleteConfigListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTableDeleteConfigListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTableIDXIndexListCompletedEventHandler(object sender, GetTableIDXIndexListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableIDXIndexListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTableIDXIndexListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTableListCompletedEventHandler(object sender, GetTableListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTableListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetObjectFormatCompletedEventHandler(object sender, GetObjectFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetColumnListCompletedEventHandler(object sender, GetColumnListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetColumnListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetColumnListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ModifyTableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteModuleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDBTablePathCompletedEventHandler(object sender, GetDBTablePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBTablePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBTablePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDBModulePathCompletedEventHandler(object sender, GetDBModulePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBModulePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBModulePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateDBModuleCompletedEventHandler(object sender, UpdateDBModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDBModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDBModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteTableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateTableCompletedEventHandler(object sender, CreateTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ImportDatabaseConfigCompletedEventHandler(object sender, ImportDatabaseConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportDatabaseConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportDatabaseConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetProjectDllFilesCompletedEventHandler(object sender, GetProjectDllFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectDllFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectDllFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInterfaceModuleListCompletedEventHandler(object sender, GetInterfaceModuleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInterfaceModuleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInterfaceModuleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteInterfaceModuleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UnLockInterfaceModuleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LockInterfaceModuleCompletedEventHandler(object sender, LockInterfaceModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockInterfaceModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockInterfaceModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateInterfaceModuleCompletedEventHandler(object sender, UpdateInterfaceModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInterfaceModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInterfaceModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInterfaceModulePathCompletedEventHandler(object sender, GetInterfaceModulePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInterfaceModulePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInterfaceModulePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateInterfaceInModuleCompletedEventHandler(object sender, UpdateInterfaceInModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInterfaceInModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInterfaceInModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteInterfaceInModuleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInterfaceInModuleCompletedEventHandler(object sender, GetInterfaceInModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInterfaceInModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInterfaceInModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInterfaceModuleIDCompletedEventHandler(object sender, GetInterfaceModuleIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInterfaceModuleIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInterfaceModuleIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInterfaceInModulePathCompletedEventHandler(object sender, GetInterfaceInModulePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInterfaceInModulePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInterfaceInModulePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SubmitBugCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMyBugListCountCompletedEventHandler(object sender, GetMyBugListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyBugListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyBugListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMyBugsCompletedEventHandler(object sender, GetMyBugsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyBugsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyBugsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBugHistoriesCompletedEventHandler(object sender, GetBugHistoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugHistoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugHistoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBugPictureCompletedEventHandler(object sender, GetBugPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BugFinishCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SubmitHistoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUpdateFileListCompletedEventHandler(object sender, GetUpdateFileListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DownLoadFileCompletedEventHandler(object sender, DownLoadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownLoadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownLoadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591